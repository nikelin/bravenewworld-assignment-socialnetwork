play.modules.enabled += "modules.AppModule"

play.crypto.secret="thisIsVeryNerdyAndHardTOPICKs_w341StringL:"
serverAddress = "http://localhost:9000"

scheduler {
  stackSize = 15
}

selenium {
  maxTotal = 15
  userDataPath = "/opt/selenium-data/userData"
  userCachePath = "/opt/selenium-data/cache"
}

oauth {
  facebook {
    endpointUrl = "https://graph.facebook.com/"
    redirectUrl = "/oauth/callback?appId=facebook&code=%s"
    accessTokenUrl = "https://graph.facebook.com/v2.7/oauth/access_token"
    authorizeUrl = " https://www.facebook.com/dialog/oauth?client_id=%s&scope=user_friends&redirect_uri=%s"
    secretKey = "cf9aaa6d1480765a793bb3acd8c398b8"
    appId = "112764942521969"

    botAccount {
      email = "testatestb@nikelin.ru"
      password = "testatestb"
    }
  }

  instagram {
    endpointUrl = "https://api.instagram.com"
    redirectUrl = "/oauth/callback?appId=instagram"
    authorizeUrl = "https://api.instagram.com/oauth/authorize/?scope=follower_list&client_id=%s&response_type=code&redirect_uri=%s"
    accessTokenUrl = "https://api.instagram.com/oauth/access_token"
    secretKey = "e37b84ce5c1f412fb38767571c05de5d"
    appId = "39352becf42244fabb49aea39e4b5ebd"

    botAccount {
      username = "michaeltestovich"
      password = "testatestb"
    }
  }

  linkedin {
    endpointUrl = "https://api.linkedin.com/v1/"
    redirectUrl = "/oauth/callback?appId=linkedin"
    accessTokenUrl = "https://www.linkedin.com/oauth/v2/accessToken"
    authorizeUrl = "https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=%s&redirect_uri=%s"
    appId = "78q3p1ir0tn0z5"
    secretKey = "w1bqqE78SCdIpMjC"

    botAccount {
      email = "testatestc@nikelin.ru"
      password = "testatestc"
    }
  }

}

scheduler-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 5
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 20
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}